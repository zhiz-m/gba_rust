[package]
name = "gba-rust-wasm"
description = "wasm frontend for gba-rust"
version = "0.1.0"
authors = ["Zhizhou Ma <zm9913@gmail.com>"]
categories = ["wasm"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.87"
js-sys = "0.3.64"
gba-core = {path = "../../core"}

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
#wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.64"
features = [
    "console", 
    "Window", 
    "HtmlCanvasElement",
    "CanvasRenderingContext2d", 
    "HtmlInputElement", 
    "HtmlButtonElement", 
    "HtmlDivElement",
    "AudioContext", 
    "AudioBuffer", 
    "Document", 
    "AudioDestinationNode", 
    "AudioBufferSourceNode", 
    "EventListener", 
    "Blob", 
    "FileReader", 
    "FileList", 
    "File",
    "ImageData",
    "Event"
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"
